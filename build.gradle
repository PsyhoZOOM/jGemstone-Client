

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }

    repositories {
        jcenter()
        mavenLocal()
        mavenCentral()
    }
}


apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'java-library'
apply plugin: 'javafx-gradle-plugin'




mainClassName = 'net.yuvideo.jgemstone.client.ClientMain'

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()

}


configurations(){
    extraLibs
}



dependencies {
    compile group: 'net.sourceforge.javacsv', name: 'javacsv', version: '2.0'
    compile group: 'org.json', name: 'json', version: '20180130'
    compile group: 'net.glxn', name: 'qrgen', version: '1.4'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.25.2'
    compile group: 'com.jfoenix', name: 'jfoenix', version: '8.0.7'
    compile group: 'org.kordamp.ikonli', name: 'ikonli-javafx', version: '2.1.1'
    compile group: 'org.kordamp.ikonli', name: 'ikonli-elusive-pack', version: '2.1.1'
    compile group: 'org.kordamp.ikonli', name: 'ikonli-materialdesign-pack', version: '2.1.1'
    compile group: 'com.lynden', name: 'GMapsFX', version: '2.12.0'


    configurations.compile.extendsFrom(configurations.extraLibs)




}


jar{
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}



jfx {
    // minimal requirement for jfxJar-task
    mainClass = 'net.yuvideo.jgemstone.client.ClientMain'

    // minimal requirement for jfxNative-task
    vendor = 'PsyhoZOOM'
   jfxMainAppJarName = 'jGemstone-Client.jar'
    bundler = 'linux.app'
    bundleArguments  = ['jnlp.outfile' : 'jGemstone-Client']


}